
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin14.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "FedData"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('FedData')
Loading required package: sp
Loading required package: raster
Loading required package: rgdal
rgdal: version: 0.9-2, (SVN revision 526)
Geospatial Data Abstraction Library extensions to R successfully loaded
Loaded GDAL runtime: GDAL 1.11.1, released 2014/09/24
Path to GDAL shared files: /usr/local/Cellar/gdal/1.11.1_3/share/gdal
Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
Path to PROJ.4 shared files: (autodetected)
Loading required package: rgeos
rgeos version: 0.3-8, (SVN revision 460)
 GEOS runtime version: 3.4.2-CAPI-1.8.2 r3921 
 Polygon checking: TRUE 

Loading required package: igraph
Loading required package: Hmisc
Loading required package: grid
Loading required package: lattice
Loading required package: survival
Loading required package: Formula
Loading required package: ggplot2

Attaching package: ‘Hmisc’

The following object is masked from ‘package:rgeos’:

    translate

The following objects are masked from ‘package:raster’:

    mask, zoom

The following objects are masked from ‘package:base’:

    format.pval, round.POSIXt, trunc.POSIXt, units

Loading required package: data.table
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("FedData-package")
> ### * FedData-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FedData-package
> ### Title: Scripts to automate downloading geospatial data available from
> ###   the several federated data sources
> ### Aliases: FedData-package FedData
> ### Keywords: package
> 
> ### ** Examples
> 
> ## Not run: 
> ##D install.packages("FedData")
> ##D library(FedData)
> ##D 
> ##D # Get a random contiguous USA county for testing
> ##D wgetDownload(
> ##D   "http://dds.cr.usgs.gov/pub/data/nationalatlas/countyp010g.shp_nt00934.tar.gz"
> ##D   ,destdir=getwd())
> ##D 
> ##D untar("./countyp010g.shp_nt00934.tar.gz")
> ##D county <- rgdal::readOGR(".","countyp010g")
> ##D county <- county[!(county$STATE ##D 
> ##D county <- county[sample(1:length(county),1),]
> ##D 
> ##D # Get the NED (USA ONLY)
> ##D # Returns a raster
> ##D NED <- getNED(template=county,
> ##D   label=paste(county$STATE,'_',county$NAME, sep=''), res='1')
> ##D 
> ##D # Get the daily GHCN data (GLOBAL)
> ##D # Returns a list: the first element is the spatial locations of stations,
> ##D # and the second is a list of the stations and their daily data
> ##D GHCN.prcp <- getGHCNDaily(template=county, 
> ##D   label=paste(county$STATE,'_',county$NAME, sep=''), 
> ##D   elements=c('prcp'), 
> ##D   standardize=F)
> ##D   
> ##D GHCN.temp <- getGHCNDaily(template=county, 
> ##D   label=paste(county$STATE,'_',county$NAME, sep=''), 
> ##D   elements=c('tmin','tmax'), 
> ##D   standardize=T)
> ##D 
> ##D # Get the NHD (USA ONLY)
> ##D NHD <- getNHD(template=county, 
> ##D   label=paste(county$STATE,'_',county$NAME, sep=''))
> ##D 
> ##D # Get the NRCS SSURGO data (USA ONLY)
> ##D SSURGO <- getSSURGO(template=county, 
> ##D   label=paste(county$STATE,'_',county$NAME, sep=''))
> ##D   
> ##D # Get the ITRDB data
> ##D ITRDB <- getITRDB(template=county, 
> ##D   label=paste(county$STATE,'_',county$NAME, sep=''))
> ##D 
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  2.786 0.072 2.862 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
